@page
@model ASP_NET_Simulation.Pages.StudentInfoModel
@{
    ViewData["Title"] = "Student Info";
}

<script src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>

<div class="container">
    <style>
        h2 {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            font-size: 36px;
            font-weight: bold;
            color: #333;
            text-shadow: 2px 2px #ccc;
            margin-top: 50px;
            margin-bottom: 20px;
            text-align: center;
        }
    </style>
    <div class="logo-container text-center" style="position: relative;">
        <div id="particles-js" style="position: absolute; width: 100%; height: 100%;"></div>
        <img src="~/images/cmu-logo.png" alt="CMU logo" style="width: 400px; position: relative; z-index: 2;">
    </div>
    <h2     class="mb-4">@ViewData["Title"]</h2>

    <form method="get" class="mb-3">
        <div class="form-group">
            <label for="searchQuery">Search by name:</label>
            <div class="input-group">
                <input type="text" id="searchQuery" name="searchQuery" asp-for="SearchQuery" class="form-control" />
                <div class="input-group-append">
                    <button type="submit" class="btn btn-cmu-red">Search</button>
                </div>
            </div>
        </div>
    </form>

    <form method="get" class="mb-4">
        <input type="hidden" name="searchQuery" asp-for="SearchQuery" />

        <div class="form-row">
            <div class="form-group col-md-4">
                <label for="financialField">Financial field:</label>
                <select id="financialField" name="financialField" asp-for="FinancialField" class="form-select">
                    <option value="balance">Balance</option>
                    <option value="financialAid">Financial Aid</option>
                    <option value="tuition">Tuition</option>
                    <option value="fees">Fees</option>
                    <option value="scholarships">Scholarships</option>
                </select>
            </div>

            <div class="form-group col-md-4">
                <label for="financialValue">Value:</label>
                <input type="number" id="financialValue" name="financialValue" step="0.01" asp-for="FinancialValue" class="form-control" />
            </div>

            <div class="form-group col-md-4">
                <label>Comparison type:</label>
                <div class="d-flex align-items-center">
                    <div class="form-check form-check-inline">
                        <input type="radio" id="lessThan" name="comparisonType" value="lessThan" asp-for="ComparisonType" class="form-check-input" />
                        <label for="lessThan" class="form-check-label">Less than</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input type="radio" id="equalTo" name="comparisonType" value="equalTo" asp-for="ComparisonType" class="form-check-input" />
                        <label for="equalTo" class="form-check-label">Equal to</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input type="radio" id="greaterThan" name="comparisonType" value="greaterThan" asp-for="ComparisonType" class="form-check-input" />
                        <label for="greaterThan" class="form-check-label">Greater than</label>
                    </div>
                </div>
            </div>
        </div>

        <button type="submit" class="btn btn-cmu-red">Filter by financial condition</button>
    </form>

    <table id="studentsTable" class="table table-bordered table-striped">
    <thead class="thead-cmu-red">
        <tr>
            <th onclick="sortTable(0, 'number')">ID</th>
            <th onclick="sortTable(1, 'string')">Name</th>
            <th onclick="sortTable(2, 'number')">Balance</th>
            <th onclick="sortTable(3, 'number')">Financial Aid</th>
            <th onclick="sortTable(4, 'number')">Tuition</th>
            <th onclick="sortTable(5, 'number')">Fees</th>
            <th onclick="sortTable(6, 'number')">Scholarships</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var student in Model.Students)
        {
            <tr>
                <td>@student.Id</td>
                <td>@student.Name</td>
                <td>@student.Balance</td>
                <td>@student.FinancialAid</td>
                <td>@student.Tuition</td>
                <td>@student.Fees</td>
                <td>@student.Scholarships</td>
                <td><a href="EditStudent?id=@student.Id" class="btn btn-cmu-light-gray">Edit</a></td>
            </tr>
        }
    </tbody>
</table>
</div>


@section Scripts {


    <script>
        particlesJS('particles-js',
            {
                "particles": {
                    "number": {
                        "value": 80,
                        "density": {
                            "enable": true,
                            "value_area": 800
                        }
                    },
                    "color": { 
                        "value": ["#C41230", "#FDB515", "#000000", "#009647", "#007BC0"]
                    },

                    "shape": {
                        "type": "circle"
                    },
                    "opacity": {
                        "value": 0.5,
                        "random": false
                    },
                    "size": {
                        "value": 6,
                        "random": true
                    },
                    "line_linked": {
                        "enable": true,
                        "distance": 150,
                        "color": "#ffffff",
                        "opacity": 0.8,
                        "width": 1
                    },
                    "move": {
                        "enable": true,
                        "speed": 3,
                        "direction": "none",
                        "random": false,
                        "straight": false,
                        "out_mode": "out",
                        "bounce": false,
                        "attract": {
                            "enable": false,
                            "rotateX": 600,
                            "rotateY": 1200
                        }
                    }
                },
                "interactivity": {
                    "detect_on": "canvas",
                    "events": {
                        "onhover": {
                            "enable": true,
                            "mode": "repulse"
                        },
                        "onclick": {
                            "enable": true,
                            "mode": "push"
                        },
                        "resize": true
                    },
                    "modes": {
                        "grab": {
                            "distance": 400,
                            "line_linked": {
                                "opacity": 1
                            }
                        },
                        "bubble": {
                            "distance": 400,
                            "size": 40,
                            "duration": 2,
                            "opacity": 8,
                            "speed": 3
                        },
                        "repulse": {
                            "distance": 100,
                            "duration": 0.4
                        },
                        "push": {
                            "particles_nb": 4
                        },
                        "remove": {
                            "particles_nb": 2
                        }
                    }
                },
                "retina_detect": true
            }
        );
    </script>


    <script>
        // This script adds sorting functionality to a table by column.
        // The script supports sorting in ascending and descending order, and handles both numeric and string data types.
        function sortTable(columnIndex, dataType) {
            var table = document.getElementById("studentsTable");
            var switching = true;
            var rows, i, x, y, shouldSwitch, direction, switchCount = 0;
            direction = "desc"; // Initial sorting direction is descending.

            // Continue sorting until no more swaps are needed.
            while (switching) {
                switching = false;
                rows = table.rows;

                // Iterate through all rows in the table.
                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    x = rows[i].getElementsByTagName("TD")[columnIndex];
                    y = rows[i + 1].getElementsByTagName("TD")[columnIndex];

                    // Determine if a swap is needed based on the data type and sorting direction.
                    if (dataType === 'number') {
                        if (direction === "desc") {
                            if (parseFloat(x.innerHTML) < parseFloat(y.innerHTML)) {
                                shouldSwitch = true;
                                break;
                            }
                        } else if (direction === "asc") {
                            if (parseFloat(x.innerHTML) > parseFloat(y.innerHTML)) {
                                shouldSwitch = true;
                                break;
                            }
                        }
                    } else {
                        if (direction === "desc") {
                            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                                shouldSwitch = true;
                                break;
                            }
                        } else if (direction === "asc") {
                            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                                shouldSwitch = true;
                                break;
                            }
                        }
                    }
                }

                // If a swap is needed, perform the swap and update the switching flag.
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    switchCount++;
                } else {
                    // If no swaps were made and the current sorting direction is descending,
                    // change the sorting direction to ascending and repeat the sorting process.
                    if (switchCount === 0 && direction === "desc") {
                        direction = "asc";
                        switching = true;
                    }
                }
            }
        }
    </script>

}
